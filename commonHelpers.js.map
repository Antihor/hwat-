{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputRef = document.querySelector('#datetime-picker');\nconst btnRef = document.querySelector('button');\nconst secRef = document.querySelector('[data-seconds]');\nconst minRef = document.querySelector('[data-minutes]');\nconst hourRef = document.querySelector('[data-hours]');\nconst dayRef = document.querySelector('[data-days');\n\nbtnRef.setAttribute('disabled', true);\nbtnRef.addEventListener('click', onStart);\n\nlet userSelectedDate;\nlet currentTime;\nlet timerId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    currentTime = Date.now();\n\n    if (userSelectedDate < currentTime) {\n      btnRef.setAttribute('disabled', true);\n      iziToast.error({\n        title: '',\n        message: 'Please choose a date in the future',\n        position: 'bottomLeft',\n      });\n    }\n\n    if (userSelectedDate > currentTime) {\n      btnRef.removeAttribute('disabled', true);\n    }\n  },\n};\n\nflatpickr(inputRef, options);\n\nfunction onStart() {\n  inputRef.setAttribute('disabled', true);\n\n  timerId = setInterval(() => {\n    currentTime = Date.now();\n    const time = userSelectedDate - currentTime;\n    const getTime = convertMs(time);\n\n    secRef.textContent = getTime.seconds;\n    minRef.textContent = getTime.minutes;\n    hourRef.textContent = getTime.hours;\n    dayRef.textContent = getTime.days;\n\n    if (time < 1000) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputRef","btnRef","secRef","minRef","hourRef","dayRef","onStart","userSelectedDate","currentTime","timerId","options","selectedDates","iziToast","flatpickr","time","getTime","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAS,SAAS,cAAc,YAAY,EAElDJ,EAAO,aAAa,WAAY,EAAI,EACpCA,EAAO,iBAAiB,QAASK,CAAO,EAExC,IAAIC,EACAC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAClCH,EAAc,KAAK,MAEfD,EAAmBC,IACrBP,EAAO,aAAa,WAAY,EAAI,EACpCW,EAAS,MAAM,CACb,MAAO,GACP,QAAS,qCACT,SAAU,YAClB,CAAO,GAGCL,EAAmBC,GACrBP,EAAO,gBAAgB,WAAY,EAAI,CAE1C,CACH,EAEAY,EAAUb,EAAUU,CAAO,EAE3B,SAASJ,GAAU,CACjBN,EAAS,aAAa,WAAY,EAAI,EAEtCS,EAAU,YAAY,IAAM,CAC1BD,EAAc,KAAK,MACnB,MAAMM,EAAOP,EAAmBC,EAC1BO,EAAUC,EAAUF,CAAI,EAE9BZ,EAAO,YAAca,EAAQ,QAC7BZ,EAAO,YAAcY,EAAQ,QAC7BX,EAAQ,YAAcW,EAAQ,MAC9BV,EAAO,YAAcU,EAAQ,KAEzBD,EAAO,KACT,cAAcL,CAAO,CAExB,EAAE,GAAI,CACT,CAEA,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMC,EAAOH,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CE,EAAQJ,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUL,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUN,EACd,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}